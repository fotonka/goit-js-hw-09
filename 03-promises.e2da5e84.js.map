{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,WACNH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAdMQ,SAASC,cAAc,QAE/BC,iBAAiB,UA8BtB,SAAwBC,GACtBA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,OAA1Bd,EAAwBa,EAAxBb,MAAOe,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KACjBC,EAAYC,OAAOlB,EAAMmB,OACzBC,EAAgBF,OAAOH,EAAOI,OAC9BE,EAAWH,OAAOF,EAAKG,OAE7BG,YAAW,YArBb,SAA0BC,EAAOF,GAE/B,IADA,IAAIG,EAAO,EACFC,EAAI,EAAGA,GAAKF,EAAOE,GAAK,EAE/B3B,EAAc2B,EADdD,GAAQH,GAELK,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBJ,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UAE9D+B,OAAM,SAAAJ,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBJ,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,UAa9DiC,CAAiBb,EAAeC,KAC/BJ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', createPromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction amountOfPromises(count, stepTime) {\n  let time = 0;\n  for (let i = 1; i <= count; i += 1) {\n    time += stepTime;\n    createPromise(i, time)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromises(e) {\n  e.preventDefault();\n  const { delay, amount, step } = e.target;\n  const delayTime = Number(delay.value);\n  const countPromises = Number(amount.value);\n  const stepTime = Number(step.value);\n\n  setTimeout(() => {\n    amountOfPromises(countPromises, stepTime);\n  }, delayTime);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","document","querySelector","addEventListener","e","preventDefault","_target","target","amount","step","delayTime","Number","value","countPromises","stepTime","setTimeout","count","time","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$amountOfPromises"],"version":3,"file":"03-promises.e2da5e84.js.map"}